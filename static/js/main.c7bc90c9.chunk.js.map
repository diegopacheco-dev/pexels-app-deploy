{"version":3,"sources":["components/galery/Galery.js","components/searchImage/SearchImage.js","services/pexelsApi.js","App.js","index.js"],"names":["Galery","images","galeryContainer","useRef","style","padding","maxWidth","margin","ref","columnsCountBreakPoints","350","750","900","1200","gutter","map","image","SearchImage","handleSearchImg","useState","search","setSearch","mostrarError","setMostrarError","className","onSubmit","e","preventDefault","test","validarBusqueda","console","log","trim","type","value","onChange","target","length","placeholder","API_KEY","URL_BASE","getImages","a","fetch","headers","peticion","json","data","photos","getImagesBySearch","word","App","setImages","useEffect","then","ReactDOM","render","document","getElementById"],"mappings":"gRA+BeA,EA1BA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAMVC,EAAkBC,mBAGxB,OACE,qBAAKC,MATQ,CACbC,QAAS,UACTC,SAAU,SACVC,OAAQ,UAMYC,IAAKN,EAAzB,SACE,cAAC,oBAAD,CACEO,wBAAyB,CAAEC,IAAK,EAAGC,IAAK,EAAGC,IAAK,EAAGC,KAAM,GAD3D,SAGE,cAAC,IAAD,CAASC,OAAO,OAAhB,SACGb,EAAOc,KAAI,SAACC,cCoCRC,G,MArDK,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAAsB,EACfC,mBAAS,IADM,mBACpCC,EADoC,KAC5BC,EAD4B,OAEHF,mBAAS,MAFN,mBAEpCG,EAFoC,KAEtBC,EAFsB,KA0B3C,OACE,sBAAKC,UAAU,mBAAf,UACE,oBAAIA,UAAU,eAAd,8BACA,sBAAMC,SAdW,SAACC,GAGpB,GAFAA,EAAEC,iBACFJ,GAAgB,IANM,SAACH,GACvB,MAAO,WAAWQ,KAAKR,GAMlBS,CAAgBT,GAGjB,OAFAG,GAAgB,QAChBO,QAAQC,MAGZb,EAAgBE,EAAOY,SAMrB,SACE,sBAAKR,UAAU,kBAAf,UACE,uBAEEA,UAAU,eACVS,KAAK,OACLC,MAAOd,EACPe,SAhCW,SAACT,GAChBA,EAAEU,OAAOF,MAAMG,OAAS,IAG5BhB,EAAUK,EAAEU,OAAOF,QA6BXI,YAAY,qBAEd,wBAAQL,KAAK,SAAST,UAAU,gBAAhC,SACA,mBACAA,UAAU,kDAMVF,GAAgB,qF,uBClDpBiB,EAAU,2DACVC,EAAW,4BAGJC,EAAS,uCAAG,8BAAAC,EAAA,sEACEC,MAAMH,EAAS,yBAA0B,CAC5DI,QAAS,CACL,cAAiBL,KAHJ,cACfM,EADe,gBAMFA,EAASC,OANP,cAMfC,EANe,yBAOdA,EAAKC,QAPS,2CAAH,qDAUTC,EAAiB,uCAAG,WAAMC,GAAN,iBAAAR,EAAA,sEACNC,MAAM,GAAD,OAAIH,EAAJ,yBAA6BU,EAA7B,iBAAiD,CACzEN,QAAS,CACL,cAAiBL,KAHI,cACvBM,EADuB,gBAMVA,EAASC,OANC,cAMvBC,EANuB,yBAOtBA,EAAKC,QAPiB,2CAAH,sDCmBfG,EA5BH,WAAO,IAAD,EAGYhC,mBAAS,IAHrB,mBAGTlB,EAHS,KAGDmD,EAHC,KAKdC,qBAAU,WACNZ,IAAYa,MAAK,SAAAP,GACfK,EAAUL,QAGb,IAUL,OACE,gCACE,cAAC,EAAD,CAAa7B,gBAVO,SAACgC,GACvBD,EAAkBC,GAAMI,MAAK,SAAAP,GAC3BK,EAAUL,SASV,cAAC,EAAD,CAAQ9C,OAAQA,QCxBtBsD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c7bc90c9.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\r\nimport \"./galery.css\";\r\nimport Masonry, { ResponsiveMasonry } from \"react-responsive-masonry\";\r\nimport ImageCard from \"../imageCard/ImageCard\";\r\n\r\nconst Galery = ({ images }) => {\r\n  const styles = {\r\n    padding: \"1em 2em\",\r\n    maxWidth: \"1920px\",\r\n    margin: \"0 auto\",\r\n  };\r\n  const galeryContainer = useRef();\r\n\r\n  \r\n  return (\r\n    <div style={styles} ref={galeryContainer}>\r\n      <ResponsiveMasonry\r\n        columnsCountBreakPoints={{ 350: 1, 750: 2, 900: 3, 1200: 4 }}\r\n      >\r\n        <Masonry gutter=\"15px\">\r\n          {images.map((image) => {\r\n            return \r\n                <ImageCard image={image} key={image.id} />\r\n\r\n          })}\r\n        </Masonry>\r\n      </ResponsiveMasonry>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Galery;\r\n","import React, { useState } from \"react\";\r\nimport \"./searchImage.css\";\r\n\r\nconst SearchImage = ({ handleSearchImg }) => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [mostrarError, setMostrarError] = useState(null)\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.value.length > 28 ){\r\n        return\r\n    }\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  const validarBusqueda = (search) => {\r\n    return /[a-z0-9]/.test(search);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setMostrarError(false)\r\n    if (!validarBusqueda(search)){\r\n        setMostrarError(true);\r\n        console.log();\r\n        return;\r\n    }\r\n    handleSearchImg(search.trim());\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-container\">\r\n      <h2 className=\"search-title\">Buscar imágen</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-container\" >\r\n          <input\r\n          \r\n            className=\"search-input\"\r\n            type=\"text\"\r\n            value={search}\r\n            onChange={handleChange}\r\n            placeholder=\"Busca una imagen\"\r\n          />\r\n          <button type=\"submit\" className=\"search-button\">\r\n          <i  \r\n          className='search-button bx bx-sm bx-search-alt-2'></i>\r\n          </button>\r\n          \r\n        </div>\r\n      </form>\r\n      {\r\n          mostrarError && <p>La búsqueda debe tener letras y/o números</p>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchImage;\r\n","const API_KEY = \"563492ad6f917000010000018269bac11b4e480ea26b343f7de49058\";\r\nconst URL_BASE = \"https://api.pexels.com/v1\"\r\n\r\n\r\nexport const getImages = async() => {\r\n    const peticion = await fetch(URL_BASE+\"/curated?&per_page=100\", {\r\n        headers: {\r\n            \"Authorization\": API_KEY\r\n        }\r\n    });\r\n    const data = await peticion.json();\r\n    return data.photos;\r\n}\r\n\r\nexport const getImagesBySearch = async(word) => {\r\n    const peticion = await fetch(`${URL_BASE}/search?query=${word}&per_page=100`,{\r\n        headers: {\r\n            \"Authorization\": API_KEY\r\n        },\r\n    });\r\n    const data = await peticion.json();\r\n    return data.photos;\r\n}\r\n","import React, {useEffect, useState} from 'react'\nimport Galery from './components/galery/Galery'\nimport SearchImage from './components/searchImage/SearchImage'\nimport {  getImages, getImagesBySearch } from './services/pexelsApi'\n\nconst App = () => {\n\n\n  const [images, setImages] = useState([]);\n\n    useEffect(() => {\n        getImages().then(data => {\n          setImages(data)\n        });\n\n    }, [])\n\n  const handleSearchImg = (word) => {\n    getImagesBySearch(word).then(data => {\n      setImages(data)\n    })\n  }\n\n\n \n  return (\n    <div>\n      <SearchImage handleSearchImg={handleSearchImg} />\n      <Galery images={images}/>\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}